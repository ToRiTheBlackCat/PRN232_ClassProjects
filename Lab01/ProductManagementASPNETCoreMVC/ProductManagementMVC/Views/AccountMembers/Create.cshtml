@model BusinessObjects.ViewModel.Accounts.AccountMemberFormModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>AccountMember</h4>
<hr />
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm rounded-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Create New Profile</h4>
                </div>

                <div class="card-body">
                    @if (TempData["Message"] != null)
                    {
                        <div class="alert alert-success">@TempData["Message"]</div>
                    }

                    @using (Html.BeginForm(FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="mb-3">
                            @Html.LabelFor(m => m.MemberId, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.MemberId, new { @class = "form-control", placeholder = "Enter Account Id" })
                            @Html.ValidationMessageFor(m => m.MemberId, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.FullName, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Enter full name" })
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.EmailAddress, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", placeholder = "Enter email" })
                            @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", placeholder = "Enter password" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm password" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.MemberRole, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.MemberRole, (SelectList)ViewBag.RoleList, new { @class = "form-control", placeholder = "Enter member role" })
                            @Html.ValidationMessageFor(m => m.MemberRole, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Create New</button>
                        </div>
                        <hr />
                        <div class="d-grid">
                            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
